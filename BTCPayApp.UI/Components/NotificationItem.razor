@using BTCPayServer.Client.Models
<a href="@GetLink()" class="border-bottom border-light @(Seen ? null : "bg-light")">
    <div class="container d-flex align-items-center gap-3 py-3">
        <div>
            <Icon Symbol="@NotificationIcon(Identifier)"/>
        </div>
        <div class="content">
            <div class="fw-semibold text-wrap">
                @Body
            </div>
            <small class="text-muted">
                <DateDisplay DateTimeOffset="Created"/>
            </small>
        </div>
    </div>
</a>

@code {
    [Parameter]
    public string? Id { get; set; }

    [Parameter]
    public string? Type { get; set; }

    [Parameter]
    public string? Identifier { get; set; }

    [Parameter]
    public DateTimeOffset Created { get; set; }

    [Parameter]
    public string? Body { get; set; }

    [Parameter]
    public string? Link { get; set; }

    [Parameter]
    public bool Seen { get; set; }

    [Parameter]
    public NotificationData Notification {
        set
        {
            Id = value.Id;
            Type = value.Type;
            Identifier = value.Identifier;
            Created = value.CreatedTime;
            Body = value.Body;
            Seen = value.Seen;
            Link = value.Link.ToString();
        }
    }

    private static string NotificationIcon(string? type)
    {
        return type switch
        {
            "invoice_expired" => "notifications-invoice-failure",
            "invoice_expiredpaidpartial" => "notifications-invoice-failure",
            "invoice_failedtoconfirm" => "notifications-invoice-failure",
            "invoice_confirmed" => "notifications-invoice-settled",
            "invoice_paidafterexpiration" => "notifications-invoice-settled",
            "external-payout-transaction" => "notifications-payout",
            "payout_awaitingapproval" => "notifications-payout",
            "payout_awaitingpayment" => "notifications-payout-approved",
            "inviteaccepted" => "notifications-account",
            "newuserrequiresapproval" => "notifications-account",
            "newversion" => "notifications-new-version",
            _ => "note"
        };
    }

    private string GetLink()
    {
        return Identifier switch
        {
            "invoice_expired" => Link!,
            "invoice_expiredpaidpartial" => Link!,
            "invoice_failedtoconfirm" => Link!,
            "invoice_confirmed" => Link!,
            "invoice_paidafterexpiration" => Link!,
            _ => "#"
        };
    }
}
