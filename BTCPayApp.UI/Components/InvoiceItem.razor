@using BTCPayApp.UI.Util
@using BTCPayServer.Client.Models
@inject DisplayFormatter DisplayFormatter

<a href="@Routes.InvoicePath(Invoice.Id)" @attributes="InputAttributes" class="@CssClass">
    <span class="fw-semibold">
        @DisplayFormatter.Currency(Invoice.Amount, Invoice.Currency, DisplayFormatter.CurrencyFormat.Symbol)
    </span>
    <span>
        <TruncateCenter Text="@Invoice.Id" class="truncate-center-id"/>
    </span>
    <span class="text-muted">
        <DateDisplay DateTimeOffset="@Invoice.CreatedTime"/>
    </span>
    <span class="text-end">
        <InvoiceStatusDisplay Invoice="@Invoice" />
    </span>
</a>

@code {
    [Parameter, EditorRequired]
    public InvoiceData Invoice { get; set; } = null!;

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? InputAttributes { get; set; }

    protected string? OrderId => Invoice.Metadata["orderId"]?.ToString();
    private string CssClass => $"invoice-item {(InputAttributes?.ContainsKey("class") is true ? InputAttributes["class"] : "")}".Trim();
}
