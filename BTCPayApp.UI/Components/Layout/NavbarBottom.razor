@using BTCPayApp.Core.Auth
@using BTCPayApp.UI.Features
@using BTCPayServer.Client
@inject IState<UIState> UiState
@inject NavigationManager NavigationManager
@inject IAccountManager AccountManager
@implements IDisposable

<nav id="NavbarBottom">
    <div class="container d-flex align-items-center justify-content-between">
        <ul class="navbar-nav">
            <AuthorizeView Policy="@Policies.CanCreateInvoice" Resource="StoreId">
                <li class="nav-item">
                    <NavLink href="@Routes.PointOfSale" Match="NavLinkMatch.All" class="@(HasStore ? "nav-link" : "nav-link disabled")" aria-disabled="@(HasStore ? null : true)">
                        <Icon Symbol="nav-keypad"/>
                        <span>Checkout</span>
                    </NavLink>
                </li>
            </AuthorizeView>
            <AuthorizeView Policy="@Policies.CanModifyStoreSettings" Resource="StoreId">
                <li class="nav-item">
                    <NavLink href="@Routes.Dashboard" Match="NavLinkMatch.All" class="@(HasStore ? HomeCssClass() : "nav-link disabled")" aria-disabled="@(HasStore ? null : true)">
                        <Icon Symbol="nav-store"/>
                        <span>Dashboard</span>
                    </NavLink>
                </li>
            </AuthorizeView>
            <AuthorizeView Policy="@Policies.CanViewInvoices" Resource="StoreId">
                <li class="nav-item">
                    <NavLink href="@Routes.Invoices" Match="NavLinkMatch.Prefix" class="@(HasStore ? "nav-link" : "nav-link disabled")" aria-disabled="@(HasStore ? null : true)">
                        <Icon Symbol="nav-invoices"/>
                        <span>Invoices</span>
                    </NavLink>
                </li>
            </AuthorizeView>
            <li class="nav-item">
                <NavLink href="@Routes.Settings" Match="NavLinkMatch.Prefix" class="nav-link">
                    <Icon Symbol="settings"/>
                    <span>Settings</span>
                </NavLink>
            </li>
        </ul>
    </div>
</nav>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    private string HomeCssClass()
    {
        var rel = "/" + NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        var c = "nav-link";
        if (rel.StartsWith(Routes.Notifications)) c += " active";
        if (rel.StartsWith(Routes.Funds)) c += " active";
        if (rel.StartsWith(Routes.Send)) c += " active";
        if (rel.StartsWith(Routes.Receive)) c += " active";
        return c;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs args)
    {
        StateHasChanged();
    }

    private bool HasStore => StoreId != null;
    private string? StoreId => AccountManager.GetCurrentStore()?.Id;
}
