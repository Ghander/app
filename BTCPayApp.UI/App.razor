@using BTCPayApp.UI.Features
@using BTCPayApp.UI.Pages
@using BTCPayApp.Core.Contracts
@using Microsoft.AspNetCore.Http
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IStateSelection<RootState, HashSet<RootState.LoadingHandles>> LoadingStateSelection
@inject IDispatcher Dispatcher
@inject IConfigProvider ConfigProvider

<PageTitle>BTCPay Server</PageTitle>
<Fluxor.Blazor.Web.StoreInitializer/>
<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <AuthorizeRouteView Resource="@routeData" RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
            <NotAuthorized>
                <RedirectToIndex/>
            </NotAuthorized>
        </AuthorizeRouteView>
        <FocusOnNavigate RouteData="@routeData" Selector="h1"/>
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(SimpleLayout)">
            <ErrorPage Title="Not found" Message="This page does not exist."/>
        </LayoutView>
    </NotFound>
</Router>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }

    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // UI
        LoadingStateSelection.Select(state => state.Loading);
        var state = await ConfigProvider.Get<UIState>(StateMiddleware.UiStateConfigKey);
        if (state != null)
        {
            if (!string.IsNullOrEmpty(state.SelectedTheme))
            {
                Dispatcher.Dispatch(new UIState.ApplyUserTheme(state.SelectedTheme));
            }
        }
    }
}
