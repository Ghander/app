@attribute [Route(Routes.Notifications)]
@using BTCPayApp.UI.Components.Layout
@using BTCPayApp.UI.Features
@using BTCPayServer.Client.Models
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IState<StoreState> StoreState

<PageTitle>Notifications</PageTitle>

<SectionContent SectionId="_Layout.Top">
    <Titlebar Back>
        <SectionContent SectionId="Titlebar.End">
            @if (Loading)
            {
                <LoadingIndicator/>
            }
        </SectionContent>
        <h1>Notifications</h1>
    </Titlebar>
</SectionContent>

@if (!string.IsNullOrEmpty(Error))
{
    <section class="container">
        <Alert Type="danger">@Error</Alert>
    </section>
}
@if (Notifications is not null)
{
    @if (Notifications.Any())
    {
        <div class="notifications">
            @foreach (var n in Notifications)
            {
                <NotificationItem Notification="@n"/>
            }
        </div>
    }
    else
    {
        <section class="container">
            <div class="box">
                <p class="text-muted text-center py-4">There are no notifications, yet.</p>
            </div>
        </section>
    }
}

@code {
    private IEnumerable<NotificationData>? Notifications => StoreState.Value.Notifications?.Data;
    private bool Loading => StoreState.Value.Notifications?.Loading is true;
    private string? Error => StoreState.Value.Notifications?.Error;
}
