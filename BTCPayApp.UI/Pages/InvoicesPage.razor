@attribute [Route(Routes.Invoices)]
@using BTCPayApp.CommonServer.Models
@using BTCPayApp.UI.Features
@using BTCPayServer.Client
@using BTCPayServer.Client.Models
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IState<StoreState> StoreState

<PageTitle>Invoices</PageTitle>

<section class="container py-4">
    <header class="d-flex align-items-center justify-content-between gap-3 mb-4">
        <h1>Invoices</h1>
    </header>
    @if (StoreInfo is null)
    {
        <Alert Type="info">Please configure a store first.</Alert>
    }
    else
    {
        <AuthorizeView Policy="@Policies.CanViewInvoices" Resource="@StoreInfo.Id">
            <Authorized>
                <InvoiceList Invoices="Invoices" Loading="Loading" Error="@Error"/>
            </Authorized>
            <NotAuthorized>
                <Alert Type="danger">Unauthorized.</Alert>
            </NotAuthorized>
        </AuthorizeView>
    }
</section>

@code {
    private AppUserStoreInfo? StoreInfo => StoreState.Value.StoreInfo;
    private IEnumerable<InvoiceData>? Invoices => StoreState.Value.Invoices?.Data;
    private bool Loading => StoreState.Value.Invoices?.Loading is true;
    private string? Error => StoreState.Value.Invoices?.Error;
}
