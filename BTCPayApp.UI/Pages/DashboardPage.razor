@attribute [Route(Routes.Dashboard)]
@using BTCPayApp.UI.Features
@using BTCPayApp.UI.Auth
@using BTCPayApp.CommonServer
@inject IAccountManager AccountManager
@inject IState<RootState> State
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<PageTitle>Dashboard</PageTitle>

<AuthorizeView>
    <Authorized>
        <section class="container d-flex align-items-center justify-content-between py-4">
            <div class="fw-semibold">
                @context.User.Identity?.Name!
            </div>
            <div class="notifications">
                <NavLink class="btn btn-light rounded-circle" href="@Routes.Notifications" Match="NavLinkMatch.All">
                    <Icon symbol="nav-notifications"/>
                    <span class="visually-hidden">Notifications</span>
                </NavLink>
            </div>
        </section>
        <section class="container d-flex flex-column gap-4">
            <div class="amount text-center">
                <div class="sats fw-bold fs-1">615,000,000 sats</div>
                <div class="fiat fw-semibold text-muted">$174,465.79</div>
            </div>
            <nav class="d-flex align-items-center gap-3 mx-auto">
                <NavLink class="btn btn-light rounded-pill w-125px" href="@Routes.WalletSend" Match="NavLinkMatch.All">
                    <Icon symbol="payment-send"/>
                    <span>Send</span>
                </NavLink>
                <NavLink class="btn btn-light rounded-pill w-125px" href="@Routes.WalletSend" Match="NavLinkMatch.All">
                    <Icon symbol="payment-receive"/>
                    <span>Receive</span>
                </NavLink>
            </nav>
        </section>
        <section class="container">
            <h2>Getting started</h2>
            <ul class="list-group list-group-flush list-group-links">
                <li class="list-group-item">
                    <NavLink class="nav-link" href="#" Match="NavLinkMatch.All">
                        <span>Configure node</span>
                        <Icon symbol="caret-right"/>
                    </NavLink>
                </li>
                <li class="list-group-item">
                    <NavLink class="nav-link" href="#" Match="NavLinkMatch.All">
                        <span>Set up wallet</span>
                        <Icon symbol="caret-right"/>
                    </NavLink>
                </li>
                <li class="list-group-item">
                    <NavLink class="nav-link" href="#" Match="NavLinkMatch.All">
                        <span>Set up recovery tools</span>
                        <Icon symbol="caret-right"/>
                    </NavLink>
                </li>
                <li class="list-group-item">
                    <NavLink class="nav-link" href="#" Match="NavLinkMatch.All">
                        <span>Configure LSP</span>
                        <Icon symbol="caret-right"/>
                    </NavLink>
                </li>
            </ul>
        </section>
        <section class="container">
            <NavLink class="btn btn-outline-danger" href="@Routes.Logout" Match="NavLinkMatch.All">
                <span>Logout</span>
            </NavLink>
        </section>
    </Authorized>
    <Authorizing>
        <section class="d-flex justify-content-center min-vh-100">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Authorizing...</span>
            </div>
        </section>
    </Authorizing>
</AuthorizeView>

@code {
    private AppUserInfo? _userInfo;

    private bool IsInitialized => State.Value.PairConfigRequested && State.Value.WalletConfigRequested;
    private bool IsLoading => State.Value.Loading.Contains(RootState.LoadingHandles.PairConfig) ||
                              State.Value.Loading.Contains(RootState.LoadingHandles.WalletConfig);

    protected override Task OnInitializedAsync()
    {
        _userInfo = AccountManager.GetUserInfo();
        return Task.CompletedTask;
    }
}
