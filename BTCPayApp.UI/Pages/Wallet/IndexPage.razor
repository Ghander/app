@attribute [Route(Routes.Wallet)]
@layout BaseLayout
@using BTCPayApp.UI.Features
@using Microsoft.AspNetCore.SignalR.Client
@using BTCPayApp.Core.Attempt2
@using BTCPayApp.UI.Components.Layout
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject NavigationManager NavigationManager
@inject IState<RootState> State

<PageTitle>Wallet</PageTitle>

<SectionContent SectionId="_Layout.Top">
    <Titlebar Back="@Routes.Dashboard">
        <h1>Wallet</h1>
        <SectionContent SectionId="Titlebar.End">
            <NavLink class="btn-close btn-back" href="@Routes.WalletSetup">
                <Icon symbol="settings"/>
            </NavLink>
        </SectionContent>
    </Titlebar>
</SectionContent>
<section class="container">
    <ul>
        <li>Connection state: @State.Value.BTCPayServerConnectionState</li>
        <li>Onchain wallet state: @State.Value.OnchainWalletState</li>
    </ul>
</section>

@code {
    private bool CanConfigureWallet =>
        !State.Value.Loading.Contains(RootState.LoadingHandles.WalletState) &&
        State.Value.OnchainWalletState == OnChainWalletState.NotConfigured &&
        State.Value.BTCPayServerConnectionState == HubConnectionState.Connected;

    protected override async Task OnInitializedAsync()
    {
        if (CanConfigureWallet)
        {
            NavigationManager.NavigateTo(Routes.WalletSetup);
        }
    }
}
