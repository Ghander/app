@attribute [Route(Routes.Index)]
@attribute [AllowAnonymous]
@layout BaseLayout
@inject NavigationManager NavigationManager
@inject IAccountManager AccountManager
@using BTCPayApp.Core.Auth
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<PageTitle>BTCPay Server</PageTitle>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthState { get; set; }

    [SupplyParameterFromQuery]
    public string? Success { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (AuthState == null) return;

        string route;
        var authState = await AuthState;
        if (authState.User.Identity?.IsAuthenticated is true)
        {
            var storeId = AccountManager.GetCurrentStore()?.Id;
            route = storeId == null ? Routes.SelectStore : Routes.Dashboard;
        }
        else
        {
            var accounts = await AccountManager.GetAccounts();
            route = accounts.Any() ? Routes.Login : Routes.Welcome;
        }
        var uri = string.IsNullOrEmpty(Success) ? route : NavigationManager.GetUriWithQueryParameters(route,
            new Dictionary<string, object?> { {"success", Success } } );
        NavigationManager.NavigateTo(uri);
    }
}
