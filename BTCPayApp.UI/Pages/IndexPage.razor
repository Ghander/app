@attribute [Route(Routes.Index)]
@attribute [AllowAnonymous]
@layout BaseLayout
@inject NavigationManager NavigationManager
@inject IAccountManager AccountManager
@using BTCPayApp.Core.Auth
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<PageTitle>BTCPay Server</PageTitle>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthState == null) return;

        var authState = await AuthState;
        if (authState.User.Identity?.IsAuthenticated is true)
        {
            var storeId = AccountManager.GetCurrentStore()?.Id;
            NavigationManager.NavigateTo(storeId == null
                ? Routes.SelectStore
                : Routes.Dashboard);
                    /*await AccountManager.IsAuthorized(Policies.CanViewStoreSettings, storeId)
                    ? Routes.Dashboard
                    : Routes.PointOfSale);*/
        }
        else
        {
            var accounts = await AccountManager.GetAccounts();
            NavigationManager.NavigateTo(accounts.Any()
                ? Routes.Login
                : Routes.Welcome);
        }
    }
}
