@attribute [AllowAnonymous]
@attribute [Route(Routes.Settings)]
@using BTCPayApp.CommonServer.Models
@using BTCPayApp.Core.Auth
@using BTCPayApp.UI.Features
@using BTCPayApp.UI.Components.Layout
@inject IState<UIState> UiState
@inject IDispatcher Dispatcher
@inject IAccountManager AccountManager
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<PageTitle>Settings</PageTitle>

<SectionContent SectionId="_Layout.Top">
    <Titlebar Back="@Routes.Index">
        <h1>Settings</h1>
    </Titlebar>
</SectionContent>
<section class="container">
    <div class="form-group">
        @if (UiState.Value.CustomThemeExtension is null)
        {
            <label class="form-label">Theme</label>
            <InputSelect class="form-select w-auto" @bind-Value="Model.Theme" @bind-Value:after="OnThemeChange">
                <option value="@Themes.System">System</option>
                <option value="@Themes.Light">Light</option>
                <option value="@Themes.Dark">Dark</option>
            </InputSelect>
        }
        else
        {
            <div>Custom Theme</div>
        }
    </div>
</section>
@if (_userInfo != null)
{
    <section class="container py-3">
        <div class="box">
            <ul class="list-group list-group-flush list-group-links">
                @if (_userInfo!.Stores?.Count() > 1)
                {
                    <li class="list-group-item">
                        <NavLink class="nav-link" href="@Routes.SelectStore">
                            <span>Select Store</span>
                            <Icon symbol="caret-right"/>
                        </NavLink>
                    </li>
                }
                <li class="list-group-item">
                    <NavLink class="nav-link" href="@Routes.ChangePasscode">
                        <span>Passcode</span>
                        <Icon symbol="caret-right"/>
                    </NavLink>
                </li>
                <li class="list-group-item">
                    <NavLink class="nav-link" href="@Routes.User">
                        <span>User Details</span>
                        <Icon symbol="caret-right"/>
                    </NavLink>
                </li>
            </ul>
        </div>
    </section>
}

@code {
    private AppUserInfo? _userInfo;
    private SettingsModel Model { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        _userInfo = AccountManager.GetUserInfo();
        Model.Theme = UiState.Value.SelectedTheme;
    }

    private void OnThemeChange()
    {
        Dispatcher.Dispatch(new UIState.ApplyUserTheme(Model.Theme));
    }

    private class SettingsModel
    {
        public string Theme { get; set; } = Themes.System;
    }
}
