@attribute [AllowAnonymous]
@attribute [Route(Routes.Settings)]
@using BTCPayApp.UI.Features
@using BTCPayApp.UI.Components.Layout
@inject IState<UIState> UiState
@inject IDispatcher Dispatcher
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<PageTitle>Settings</PageTitle>

<SectionContent SectionName="top">
    <Titlebar>
        <h1>Settings</h1>
    </Titlebar>
</SectionContent>
<section class="container">
    <div class="form-group">
        @if (UiState.Value.CustomThemeExtension is null)
        {
        <label class="form-label">Theme</label>
        <InputSelect class="form-select w-auto" @bind-Value="Model.Theme" @bind-Value:after="OnThemeChange">
            <option value="@Themes.System">System</option>
            <option value="@Themes.Light">Light</option>
            <option value="@Themes.Dark">Dark</option>
        </InputSelect>
        }
        else
        {
        <div>Custom Theme</div>
        }
    </div>
</section>

@code {
    private SettingsModel Model { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Model.Theme = UiState.Value.SelectedTheme;
    }

    private void OnThemeChange()
    {
        Dispatcher.Dispatch(new UIState.ApplyUserTheme(Model.Theme));
    }

    private class SettingsModel
    {
        public string Theme { get; set; } = Themes.System;
    }
}
